import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

housing = fetch_california_housing()
X,y = housing.data, housing.target
feature_names = housing.feature_names
# print("feature names:", feature_names)


X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=.2,random_state=42)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)


model = LinearRegression()
model.fit(X_train_scaled,y_train)
y_perd = model.predict(X_test_scaled)
rmse = np.sqrt(mean_squared_error(y_test, y_perd))
print(f'Test RMSE: {rmse:.2f}')

coefficients = model.coef_
for name, coef in zip (feature_names,coefficients):
    print(f'{name}:{coef:.3f}')

plt.figure(figsize= (8,6))
plt.scatter(y_test,y_perd,alpha = 0.5)
plt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()],'k--',lw=2 )
plt.xlabel('Actual Prices')
plt.ylabel('Perdict Prices')
plt.title('Actual vs Perdict House Prices')
plt.show()